# Setting the prefix from `C-b` to `C-Space`.
# By remapping the `CapsLock` key to `Ctrl`,
# you can make triggering commands more comfortable!
set -g prefix C-Space

# Free the original `Ctrl-b` prefix keybinding.
unbind C-b

# Ensure that we can send `Ctrl-Space` to other apps.
bind C-Space send-prefix

# apps should know that this is 'screen' and not xterm. Slight compatibility
# reasons. tmux should be running in xterm-256colors, and set TERM so that
# applications within tmux see screen-256colors tmux does not support -bce
# (background color erase)
set -g default-terminal 'screen-256color'

# split panes using \ and -
# bind \\ split-window -h
# bind - split-window -v
# split panes at current directory (| and _)
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Moving between panes.
# Use vim-tmux-navigator plugin if possible. (Ctrl+ h,j,k,l)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# clear screen
bind -n C-p send-keys -R \; clear-history

# don't rename windows automatically
# set-option -g allow-rename off

# Pane resizing.
bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5

# maximize pane
bind -r m resize-pane -Z

# reorder windows.
bind-key -n C-S-Left swap-window -d -t -1
bind-key -n C-S-Right swap-window -d -t +1
bind-key -n MouseDrag1Status swap-window -d -t=

# 256 colour
#set -g default-terminal "tmux-256color"
set -g default-terminal "screen-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Home End key doesn't work?
# bind-key -n Home send Escape "OH"
# bind-key -n End send Escape "OF"

# Vimlike copy mode.
bind Escape copy-mode
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-selection
unbind -Tcopy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Ctrl+<space> + q to show pane numbers, for long time.
set -g display-panes-time 4000

# Setting the delay between prefix and command.
set -sg escape-time 1

# Set the base index for windows to 1 instead of 0.
set -g base-index 1

# Set the base index for panes to 1 instead of 0.
setw -g pane-base-index 1

# Cache 30000 lines for scroll back
set-option -g history-limit 30000

# Enable vi keys.
setw -g mode-keys vi

# toggle between two panes / windows
bind-key t last-window
bind-key T last-pane

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none


# set default directory for new windows in this session to current directory:
bind M-c attach-session -c "#{pane_current_path}"

# open a new window in the current directory
bind c new-window -c "#{pane_current_path}"


# Kill window is by default mapped to prefix + &
# Kill pane is by default mapped to prefix + x
# Kill session
bind X confirm-before kill-session

# tmux.nvim seamless navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'


# https://www.ditig.com/256-colors-cheat-sheet
# white, black etc. are not accurate (they follow system colour).
# Use grey100, grey0 instead.

#  modes
setw -g clock-mode-colour colour5
# when text selected with mouse
#setw -g mode-style 'fg=colour1 bg=colour18 bold'

# panes
set -g pane-border-style 'fg=grey0'
set -g pane-active-border-style 'fg=violet'

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=grey35 fg=grey100'
set -g status-left ''
set -g status-right ''
#set -g status-right '#[fg=colour233,bg=colour19] %d/%m #[fg=colour233,bg=colour8] %H:%M:%S #[fg=colour10,bg=colour11] Pane '
set -g status-right '#{prefix_highlight}'
set -g status-right-length 50
set -g status-left-length 20

#setw -g window-status-current-style 'fg=grey100'
setw -g window-status-current-format ' #[fg=colour9][#I#[fg=grey100]:#W#F#[fg=colour9]] '

setw -g window-status-style 'fg=grey70'
setw -g window-status-format ' #I:#W '

setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

# messages
set -g message-style 'fg=grey100 bg=grey0'

# pane status
set -g pane-border-status top 
#set -g pane-border-format '#[fg=grey0,bg=grey50] .#P (#D) pid=#{pane_pid} #{pane_current_command} '

# dracula theme
white='#f8f8f2'
gray='#44475a'
dark_purple='#6272a4'

set -g pane-border-format "#[fg=#6272a4,bg=default]ÓÇ≤#[fg=#f8f8f2,bg=#6272a4] .#P pid=#{pane_pid} #{pane_current_command} (#{?pane_active,active,inactive}) #[fg=#6272a4,bg=default]ÓÇ∞"
# simple and dim version
#set -g pane-border-format "ÓÇ≤ .#P (#D) pid=#{pane_pid} #{pane_current_command} (#{?pane_active,active,inactive})ÓÇ∞"

# For tmux-yank.
# Set this only if you use bash vi mode.
# set -g @shell_mode 'vi'

# For tmux-prefix-highlight
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_sync_mode 'on'

# dracula theme
# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, network, network-bandwidth, network-ping, 
# attached-clients, network-vpn, weather, time, spotify-tui, kubernjtes-context
set -g @dracula-plugins "battery ram-usage git"
set -g @dracula-cpu-usage-colors "pink dark_gray"
#set -g @dracula-gpu-usage-colors "orange dark_gray"
set -g @dracula-battery-colors "light_purple dark_gray"
set -g @dracula-weather-colors "dark_purple white"
set -g @dracula-git-colors "red dark_gray"
set -g @dracula-git-no-repo-message "üëª"

# Add shape to the status bar
set -g @dracula-show-powerline true
# for left
#set -g @dracula-show-left-sep ÓÇ∏
# for right symbol (can set any symbol you like as seperator)
#set -g @dracula-show-right-sep ÓÇ∫

# it can accept `session`, `smiley`, `window`, 'üê∞' or any character.
set -g @dracula-show-left-icon "ü•∑"
set -g @dracula-cpu-usage-label "CPU"
set -g @dracula-cpu-usage-label-25 "üòµ"
set -g @dracula-cpu-usage-label-50 "ü§ï"
set -g @dracula-cpu-usage-label-75 "ü§Ø"
set -g @dracula-gpu-usage-label "GPU"
set -g @dracula-ram-usage-label "RAM"
set -g @dracula-battery-dc-label-0 "üå±"
set -g @dracula-battery-dc-label-35 "üåø"
set -g @dracula-battery-dc-label-70 "ü•ï"
set -g @dracula-battery-ac-label-0 "üí¶ üå±"
set -g @dracula-battery-ac-label-35 "üí¶ üåø"
set -g @dracula-battery-ac-label-70 "üí¶ ü•ï"
set -g @dracula-battery-ac-label "üè°"

set -g @dracula-show-fahrenheit true
set -g @dracula-fixed-location "Denver"
set -g @dracula-show-location true

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restarts
#set -g @plugin 'tmux-plugins/tmux-continuum' # automatically save tmux sessions every 15 minutes
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'kiyoon/tmux-yank'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'kiyoon/tmux-dracula'

#set -g @resurrect-capture-pane-contents 'on'
#set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
